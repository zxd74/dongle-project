<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwanvi.nvwa.dao.PlanMapper">
	<resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.Plan">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="adver_id" property="adverId" jdbcType="INTEGER" />
		<result column="plan_limit" property="planLimit" jdbcType="INTEGER" />
		<result column="run_state" property="runState" jdbcType="INTEGER" />
		<result column="limit_state" property="limitState" jdbcType="INTEGER" />
		<result column="plan_state" property="planState" jdbcType="INTEGER" />
		<result column="create_user" property="createUser" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="imp_monitor_url" property="impMonitorUrl"
			jdbcType="VARCHAR" />
		<result column="clk_monitor_url" property="clkMonitorUrl"
			jdbcType="VARCHAR" />
		<result column="create_type" property="createType" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, plan_name, adver_id, plan_limit, run_state,
		limit_state, plan_state,
		create_user,
		create_time, update_time,
		imp_monitor_url, clk_monitor_url,create_type
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.iwanvi.nvwa.dao.model.PlanExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from plan
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from plan
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.PlanExample">
		delete from plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.Plan">
		insert into plan (id,
		plan_name, adver_id,
		plan_limit, run_state, limit_state,
		plan_state,
		create_user, create_time,
		update_time, imp_monitor_url,
		clk_monitor_url, create_type
		)
		values (#{id,jdbcType=INTEGER},
		#{planName,jdbcType=VARCHAR},
		#{adverId,jdbcType=INTEGER},
		#{planLimit,jdbcType=INTEGER},
		#{runState,jdbcType=INTEGER},
		#{limitState,jdbcType=INTEGER},
		#{planState,jdbcType=INTEGER},
		#{createUser,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{impMonitorUrl,jdbcType=VARCHAR},
		#{clkMonitorUrl,jdbcType=VARCHAR},
		#{createType,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id" parameterType="com.iwanvi.nvwa.dao.model.Plan">
		insert into plan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="planName != null">
				plan_name,
			</if>
			<if test="adverId != null">
				adver_id,
			</if>
			<if test="planLimit != null">
				plan_limit,
			</if>
			<if test="runState != null">
				run_state,
			</if>
			<if test="limitState != null">
				limit_state,
			</if>
			<if test="planState != null">
				plan_state,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="impMonitorUrl != null">
				imp_monitor_url,
			</if>
			<if test="clkMonitorUrl != null">
				clk_monitor_url,
			</if>
			<if test="createType != null">
				create_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="planName != null">
				#{planName,jdbcType=VARCHAR},
			</if>
			<if test="adverId != null">
				#{adverId,jdbcType=INTEGER},
			</if>
			<if test="planLimit != null">
				#{planLimit,jdbcType=INTEGER},
			</if>
			<if test="runState != null">
				#{runState,jdbcType=INTEGER},
			</if>
			<if test="limitState != null">
				#{limitState,jdbcType=INTEGER},
			</if>
			<if test="planState != null">
				#{planState,jdbcType=INTEGER},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="impMonitorUrl != null">
				#{impMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="clkMonitorUrl != null">
				#{clkMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="createType != null">
				#{createType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.PlanExample"
		resultType="java.lang.Integer">
		select count(*) from plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update plan
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.planName != null">
				plan_name = #{record.planName,jdbcType=VARCHAR},
			</if>
			<if test="record.adverId != null">
				adver_id = #{record.adverId,jdbcType=INTEGER},
			</if>
			<if test="record.planLimit != null">
				plan_limit = #{record.planLimit,jdbcType=INTEGER},
			</if>
			<if test="record.runState != null">
				run_state = #{record.runState,jdbcType=INTEGER},
			</if>
			<if test="record.limitState != null">
				limit_state = #{record.limitState,jdbcType=INTEGER},
			</if>
			<if test="record.planState != null">
				plan_state = #{record.planState,jdbcType=INTEGER},
			</if>
			<if test="record.createUser != null">
				create_user = #{record.createUser,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.impMonitorUrl != null">
				imp_monitor_url =
				#{record.impMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.clkMonitorUrl != null">
				clk_monitor_url =
				#{record.clkMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.createType != null">
				create_type = #{record.createType,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update plan
		set id = #{record.id,jdbcType=INTEGER},
		plan_name =
		#{record.planName,jdbcType=VARCHAR},
		adver_id =
		#{record.adverId,jdbcType=INTEGER},
		plan_limit =
		#{record.planLimit,jdbcType=INTEGER},
		run_state =
		#{record.runState,jdbcType=INTEGER},
		limit_state =
		#{record.limitState,jdbcType=INTEGER},
		plan_state =
		#{record.planState,jdbcType=INTEGER},
		create_user =
		#{record.createUser,jdbcType=INTEGER},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP},
		imp_monitor_url =
		#{record.impMonitorUrl,jdbcType=VARCHAR},
		clk_monitor_url =
		#{record.clkMonitorUrl,jdbcType=VARCHAR},
		create_type =
		#{record.createType,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.Plan">
		update plan
		<set>
			<if test="planName != null">
				plan_name = #{planName,jdbcType=VARCHAR},
			</if>
			<if test="adverId != null">
				adver_id = #{adverId,jdbcType=INTEGER},
			</if>
			<if test="planLimit != null">
				plan_limit = #{planLimit,jdbcType=INTEGER},
			</if>
			<if test="runState != null">
				run_state = #{runState,jdbcType=INTEGER},
			</if>
			<if test="limitState != null">
				limit_state = #{limitState,jdbcType=INTEGER},
			</if>
			<if test="planState != null">
				plan_state = #{planState,jdbcType=INTEGER},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="impMonitorUrl != null">
				imp_monitor_url = #{impMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="clkMonitorUrl != null">
				clk_monitor_url = #{clkMonitorUrl,jdbcType=VARCHAR},
			</if>
			<if test="createType != null">
				create_type = #{createType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.Plan">
		update plan
		set
		plan_name = #{planName,jdbcType=VARCHAR},
		adver_id =
		#{adverId,jdbcType=INTEGER},
		plan_limit =
		#{planLimit,jdbcType=INTEGER},
		run_state =
		#{runState,jdbcType=INTEGER},
		limit_state =
		#{limitState,jdbcType=INTEGER},
		plan_state =
		#{planState,jdbcType=INTEGER},
		create_user =
		#{createUser,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		imp_monitor_url =
		#{impMonitorUrl,jdbcType=VARCHAR},
		clk_monitor_url =
		#{clkMonitorUrl,jdbcType=VARCHAR},
		create_type =
		#{createType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<sql id="Base_Map_Select_Clause">
		<if test="adverId != null and adverId != ''">
			and p.adver_id = #{adverId}
		</if>
		<if test="planName != null and planName != ''">
			and p.plan_name like concat('%',#{planName},'%')
		</if>
		<choose>
			<when test="createUser != null and createUser != ''">
				and p.create_user = #{createUser}
			</when>
			<otherwise>
				<if test="createUsers != null and createUsers.size > 0">
					and p.create_user in
					<foreach collection="createUsers" separator="," close=")"
						open="(" item="user">
						#{user}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<if test="planState != null and planState != ''">
			and p.plan_state = #{planState}
		</if>
	</sql>

	<select id="countByMap" resultType="java.lang.Integer">
		select count(id) from plan p
		where 1=1
		<include refid="Base_Map_Select_Clause" />
	</select>

	<select id="selectOtherById" resultType="java.util.Map">
		select cust.full_name custName,u.user_name userName from plan pl
		left
		join company cust
		on pl.adver_id = cust.id
		left join `user` u
		on
		pl.create_user = u.id
		<if test="id != null">
			where pl.id = #{id}
		</if>
	</select>
</mapper>