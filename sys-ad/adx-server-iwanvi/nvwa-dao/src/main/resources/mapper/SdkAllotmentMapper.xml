<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwanvi.nvwa.dao.SdkAllotmentMapper">
  <resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.SdkAllotment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="allotment_name" jdbcType="VARCHAR" property="allotmentName" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="platform_id" jdbcType="INTEGER" property="platformId" />
    <result column="os" jdbcType="INTEGER" property="os" />
    <result column="app_version" jdbcType="VARCHAR" property="appVersion" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="charge_type" jdbcType="INTEGER" property="chargeType" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, allotment_name, app_id, platform_id, os, app_version, channel_id, frequency, 
    status, type, charge_type, create_user, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sdk_allotment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start != null and limit != null">
      limit ${start},${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sdk_allotment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sdk_allotment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotmentExample">
    delete from sdk_allotment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotment" useGeneratedKeys="true" keyProperty="id">
    insert into sdk_allotment (id, allotment_name, app_id, 
      platform_id, os, app_version, 
      channel_id, frequency, status, 
      type, charge_type, create_user, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{allotmentName,jdbcType=VARCHAR}, #{appId,jdbcType=INTEGER}, 
      #{platformId,jdbcType=INTEGER}, #{os,jdbcType=INTEGER}, #{appVersion,jdbcType=VARCHAR}, 
      #{channelId,jdbcType=VARCHAR}, #{frequency,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{chargeType,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotment" useGeneratedKeys="true" keyProperty="id">
    insert into sdk_allotment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="allotmentName != null">
        allotment_name,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="os != null">
        os,
      </if>
      <if test="appVersion != null">
        app_version,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="chargeType != null">
        charge_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="allotmentName != null">
        #{allotmentName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="platformId != null">
        #{platformId,jdbcType=INTEGER},
      </if>
      <if test="os != null">
        #{os,jdbcType=INTEGER},
      </if>
      <if test="appVersion != null">
        #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="chargeType != null">
        #{chargeType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotmentExample" resultType="java.lang.Long">
    select count(*) from sdk_allotment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sdk_allotment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.allotmentName != null">
        allotment_name = #{record.allotmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=INTEGER},
      </if>
      <if test="record.os != null">
        os = #{record.os,jdbcType=INTEGER},
      </if>
      <if test="record.appVersion != null">
        app_version = #{record.appVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=VARCHAR},
      </if>
      <if test="record.frequency != null">
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.chargeType != null">
        charge_type = #{record.chargeType,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sdk_allotment
    set id = #{record.id,jdbcType=INTEGER},
      allotment_name = #{record.allotmentName,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=INTEGER},
      platform_id = #{record.platformId,jdbcType=INTEGER},
      os = #{record.os,jdbcType=INTEGER},
      app_version = #{record.appVersion,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=VARCHAR},
      frequency = #{record.frequency,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      charge_type = #{record.chargeType,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotment">
    update sdk_allotment
    <set>
      <if test="allotmentName != null">
        allotment_name = #{allotmentName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="platformId != null">
        platform_id = #{platformId,jdbcType=INTEGER},
      </if>
      <if test="os != null">
        os = #{os,jdbcType=INTEGER},
      </if>
      <if test="appVersion != null">
        app_version = #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="chargeType != null">
        charge_type = #{chargeType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotment">
    update sdk_allotment
    set allotment_name = #{allotmentName,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=INTEGER},
      platform_id = #{platformId,jdbcType=INTEGER},
      os = #{os,jdbcType=INTEGER},
      app_version = #{appVersion,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      charge_type = #{chargeType,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkAllotmentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from sdk_allotment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sdk_allotment
    (id, allotment_name, app_id, platform_id, os, app_version, channel_id, frequency, 
      status, type, charge_type, create_user, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.allotmentName,jdbcType=VARCHAR}, #{item.appId,jdbcType=INTEGER}, 
        #{item.platformId,jdbcType=INTEGER}, #{item.os,jdbcType=INTEGER}, #{item.appVersion,jdbcType=VARCHAR}, 
        #{item.channelId,jdbcType=VARCHAR}, #{item.frequency,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, 
        #{item.type,jdbcType=INTEGER}, #{item.chargeType,jdbcType=INTEGER}, #{item.createUser,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sdk_allotment (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'allotment_name'.toString() == column.value">
          #{item.allotmentName,jdbcType=VARCHAR}
        </if>
        <if test="'app_id'.toString() == column.value">
          #{item.appId,jdbcType=INTEGER}
        </if>
        <if test="'platform_id'.toString() == column.value">
          #{item.platformId,jdbcType=INTEGER}
        </if>
        <if test="'os'.toString() == column.value">
          #{item.os,jdbcType=INTEGER}
        </if>
        <if test="'app_version'.toString() == column.value">
          #{item.appVersion,jdbcType=VARCHAR}
        </if>
        <if test="'channel_id'.toString() == column.value">
          #{item.channelId,jdbcType=VARCHAR}
        </if>
        <if test="'frequency'.toString() == column.value">
          #{item.frequency,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'charge_type'.toString() == column.value">
          #{item.chargeType,jdbcType=INTEGER}
        </if>
        <if test="'create_user'.toString() == column.value">
          #{item.createUser,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  
  <select id="getAppList" resultType="java.util.HashMap" parameterType="int">
    select t1.id appId, t1.`app_id` appUuid, t1.app_name appName
    from apps t1
    where t1.`status` = 1 and  t1.`app_status` = 1
  </select>
  
  <select id="getPlatformList" resultType="java.util.HashMap">
    select t1.id platformId, t1.`consumer_name` platformName
    from flow_consumer t1 
    where t1.`run_state` = 1 and t1.`consumer_type` = 97;
  </select>
  
  <select id="getAdPostionList" resultType="java.util.HashMap">
    select t2.id adPosId, t2.name adPosName 
    from `ad_position_mapping` t1, ad_position t2 
	where t2.`app_id` = #{appId} and t1.`flow_consumer_id` = #{platformId} 
		and t2.id = t1.`ad_position_id` and t1.status = 1 and t2.status = 1;
  </select>
</mapper>