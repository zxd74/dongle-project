<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwanvi.nvwa.dao.QuotaPlanMapper">
	<resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.QuotaPlan">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="plan_id" property="planId" jdbcType="INTEGER" />
		<result column="cre_day" property="creDay" jdbcType="INTEGER" />
		<result column="cre_hour" property="creHour" jdbcType="INTEGER" />
		<result column="req" property="req" jdbcType="INTEGER" />
		<result column="exp" property="exp" jdbcType="INTEGER" />
		<result column="clk" property="clk" jdbcType="INTEGER" />
		<result column="cost" property="cost" jdbcType="BIGINT" />
		<result column="investment" property="investment" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="bid" property="bid" jdbcType="INTEGER" />
		<result column="win" property="win" jdbcType="INTEGER" />
		<result column="agent_cost" property="agentCost" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, plan_id, cre_day, cre_hour, req, exp, clk, cost,
		investment,
		create_time, bid,
		win, agent_cost
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.iwanvi.nvwa.dao.model.QuotaPlanExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from quota_plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from quota_plan
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		quota_plan
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlanExample">
		delete from quota_plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		insert into quota_plan (id,
		plan_id, cre_day,
		cre_hour, req, exp,
		clk, cost, investment,
		create_time, bid, win,
		agent_cost)
		values (#{id,jdbcType=INTEGER},
		#{planId,jdbcType=INTEGER},
		#{creDay,jdbcType=INTEGER},
		#{creHour,jdbcType=INTEGER}, #{req,jdbcType=INTEGER},
		#{exp,jdbcType=INTEGER},
		#{clk,jdbcType=INTEGER},
		#{cost,jdbcType=BIGINT},
		#{investment,jdbcType=BIGINT},
		#{createTime,jdbcType=TIMESTAMP}, #{bid,jdbcType=INTEGER},
		#{win,jdbcType=INTEGER},
		#{agentCost,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		insert into quota_plan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="planId != null">
				plan_id,
			</if>
			<if test="creDay != null">
				cre_day,
			</if>
			<if test="creHour != null">
				cre_hour,
			</if>
			<if test="req != null">
				req,
			</if>
			<if test="exp != null">
				exp,
			</if>
			<if test="clk != null">
				clk,
			</if>
			<if test="cost != null">
				cost,
			</if>
			<if test="investment != null">
				investment,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="bid != null">
				bid,
			</if>
			<if test="win != null">
				win,
			</if>
			<if test="agentCost != null">
				agent_cost,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="planId != null">
				#{planId,jdbcType=INTEGER},
			</if>
			<if test="creDay != null">
				#{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				#{creHour,jdbcType=INTEGER},
			</if>
			<if test="req != null">
				#{req,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				#{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				#{clk,jdbcType=INTEGER},
			</if>
			<if test="cost != null">
				#{cost,jdbcType=BIGINT},
			</if>
			<if test="investment != null">
				#{investment,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="bid != null">
				#{bid,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				#{win,jdbcType=INTEGER},
			</if>
			<if test="agentCost != null">
				#{agentCost,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlanExample"
		resultType="java.lang.Integer">
		select count(*) from quota_plan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update quota_plan
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.planId != null">
				plan_id = #{record.planId,jdbcType=INTEGER},
			</if>
			<if test="record.creDay != null">
				cre_day = #{record.creDay,jdbcType=INTEGER},
			</if>
			<if test="record.creHour != null">
				cre_hour = #{record.creHour,jdbcType=INTEGER},
			</if>
			<if test="record.req != null">
				req = #{record.req,jdbcType=INTEGER},
			</if>
			<if test="record.exp != null">
				exp = #{record.exp,jdbcType=INTEGER},
			</if>
			<if test="record.clk != null">
				clk = #{record.clk,jdbcType=INTEGER},
			</if>
			<if test="record.cost != null">
				cost = #{record.cost,jdbcType=BIGINT},
			</if>
			<if test="record.investment != null">
				investment = #{record.investment,jdbcType=BIGINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.bid != null">
				bid = #{record.bid,jdbcType=INTEGER},
			</if>
			<if test="record.win != null">
				win = #{record.win,jdbcType=INTEGER},
			</if>
			<if test="record.agentCost != null">
				agent_cost = #{record.agentCost,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update quota_plan
		set id = #{record.id,jdbcType=INTEGER},
		plan_id =
		#{record.planId,jdbcType=INTEGER},
		cre_day =
		#{record.creDay,jdbcType=INTEGER},
		cre_hour =
		#{record.creHour,jdbcType=INTEGER},
		req =
		#{record.req,jdbcType=INTEGER},
		exp = #{record.exp,jdbcType=INTEGER},
		clk = #{record.clk,jdbcType=INTEGER},
		cost =
		#{record.cost,jdbcType=BIGINT},
		investment =
		#{record.investment,jdbcType=BIGINT},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		bid =
		#{record.bid,jdbcType=INTEGER},
		win = #{record.win,jdbcType=INTEGER},
		agent_cost = #{record.agentCost,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		update quota_plan
		<set>
			<if test="planId != null">
				plan_id = #{planId,jdbcType=INTEGER},
			</if>
			<if test="creDay != null">
				cre_day = #{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				cre_hour = #{creHour,jdbcType=INTEGER},
			</if>
			<if test="req != null">
				req = #{req,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				exp = #{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				clk = #{clk,jdbcType=INTEGER},
			</if>
			<if test="cost != null">
				cost = #{cost,jdbcType=BIGINT},
			</if>
			<if test="investment != null">
				investment = #{investment,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="bid != null">
				bid = #{bid,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				win = #{win,jdbcType=INTEGER},
			</if>
			<if test="agentCost != null">
				agent_cost = #{agentCost,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		update quota_plan
		set plan_id = #{planId,jdbcType=INTEGER},
		cre_day =
		#{creDay,jdbcType=INTEGER},
		cre_hour = #{creHour,jdbcType=INTEGER},
		req
		= #{req,jdbcType=INTEGER},
		exp = #{exp,jdbcType=INTEGER},
		clk =
		#{clk,jdbcType=INTEGER},
		cost = #{cost,jdbcType=BIGINT},
		investment =
		#{investment,jdbcType=BIGINT},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		bid = #{bid,jdbcType=INTEGER},
		win =
		#{win,jdbcType=INTEGER},
		agent_cost = #{agentCost,jdbcType=BIGINT}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<sql id="Qp_Base_Select_Clause">
		SUM(CASE WHEN qp.cre_day = #{day} and qp.cre_hour = #{hour}
		THEN 0 else qp.exp END) exp,
		SUM(CASE WHEN qp.cre_day = #{day} and
		qp.cre_hour = #{hour}
		THEN 0 else qp.clk END) clk,
		SUM(CASE WHEN
		qp.cre_day = #{day} and qp.cre_hour = #{hour}
		THEN 0 else qp.cost
		END)/1000 cost,
		SUM(CASE WHEN qp.cre_day = #{day} and qp.cre_hour =
		#{hour}
		THEN 0 else qp.investment END)/1000 investment
	</sql>

	<sql id="Plan_Base_Where_Clause">
		<if test="id != null and id != ''">
			and pl.id = #{id}
		</if>
		<if test="adverId != null and adverId != ''">
			and pl.adver_id = #{adverId}
		</if>
		<if test="advers != null and advers.size > 0">
			and pl.adver_id in
			<foreach collection="advers" open="(" close=")" item="adver"
				separator=",">
				#{adver}
			</foreach>
		</if>
		<if test="planName != null and planName != ''">
			and pl.plan_name like concat('%',#{planName},'%')
		</if>
		<choose>
			<when test="createUser != null and createUser !=''">
				and pl.create_user = #{createUser}
			</when>
			<otherwise>
				<if test="createUsers != null and createUsers.size > 0">
					and pl.create_user in
					<foreach collection="createUsers" open="(" close=")"
						separator="," item="user">
						#{user}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<if test="planState != null and planState != ''">
			and pl.plan_state = #{planState}
		</if>
	</sql>

	<sql id="Qp_Base_Where_Clause">
		<if test="planId != null and planId != ''">
			and qp.plan_id = #{planId}
		</if>
		<if test="sTime != null and eTime != null">
			and qp.cre_day between #{sTime} and #{eTime}
		</if>
	</sql>

	<select id="listByDay" parameterType="java.util.Map"
		resultType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		select pl.id planId,pl.plan_name planName,qp.cre_day creDay,
		<include refid="Qp_Base_Select_Clause" />
		from
		plan pl
		left join
		quota_plan qp
		on pl.id = qp.plan_id
		where 1=1
		<include refid="Plan_Base_Where_Clause" />
		<include refid="Qp_Base_Where_Clause" />
		GROUP BY qp.cre_day
		order by qp.cre_day
	</select>

	<select id="listByInit" parameterType="java.util.Map"
		resultType="com.iwanvi.nvwa.dao.model.QuotaPlan">
		select pl.id planId,pl.plan_name planName,
		<include refid="Qp_Base_Select_Clause" />
		from
		plan pl
		left join
		quota_plan qp
		on pl.id = qp.plan_id
		<include refid="Qp_Base_Where_Clause" />
		where 1=1
		<include refid="Plan_Base_Where_Clause" />
		GROUP BY pl.id
		order by pl.run_state desc,pl.id desc
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
	<select id="getQuotaPlanByDayHour" resultType="java.util.HashMap"
		parameterType="map">
		select t1.id id, t1.plan_id planId, t1.bid bid,
		t1.win win, t1.exp exp, t1.clk clk, t1.cost cost, t1.agent_cost agentCost
		from quota_plan t1
		where t1.plan_id = #{planId} and t1.cre_day = #{day}
		and t1.cre_hour = #{hour} limit 1
	</select>

</mapper>