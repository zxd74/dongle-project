<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwanvi.nvwa.dao.QuotaPlatformMapper">
	<resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.QuotaPlatform">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="platform_id" property="platformId" jdbcType="VARCHAR" />
		<result column="cre_day" property="creDay" jdbcType="INTEGER" />
		<result column="cre_hour" property="creHour" jdbcType="INTEGER" />
		<result column="req" property="req" jdbcType="BIGINT" />
		<result column="bid" property="bid" jdbcType="INTEGER" />
		<result column="exp" property="exp" jdbcType="INTEGER" />
		<result column="clk" property="clk" jdbcType="INTEGER" />
		<result column="invest" property="invest" jdbcType="BIGINT" />
		<result column="timeout" property="timeout" jdbcType="INTEGER" />
		<result column="nobid" property="nobid" jdbcType="BIGINT" />
		<result column="lower" property="lower" jdbcType="INTEGER" />
		<result column="overqps" property="overqps" jdbcType="BIGINT" />
		<result column="error" property="error" jdbcType="INTEGER" />
		<result column="win" property="win" jdbcType="BIGINT" />
		<result column="cid" property="cid" jdbcType="INTEGER" />
        <result column="consumername" property="consumerName" jdbcType="VARCHAR" />
        <result column="dspId" property="dspId" jdbcType="VARCHAR" />
        <result column="appid" property="appid" jdbcType="VARCHAR" />
        <result column="adpid" property="adpid" jdbcType="VARCHAR" />
        <result column="item_id" property="itemId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, platform_id, cre_day, cre_hour, req, bid, exp, clk,
		invest, timeout, nobid, lower, overqps, error, win, appid, adpid
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatformExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from quota_platform
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from quota_platform
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		quota_platform
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatformExample">
		delete from quota_platform
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatform">
		insert into quota_platform
		(id, platform_id, cre_day,
		cre_hour, req, bid, appid, adpid
		exp, clk, invest, timeout, nobid, lower, overqps, error, win)
		values
		(#{id,jdbcType=INTEGER}, #{platformId,jdbcType=VARCHAR},
		#{creDay,jdbcType=INTEGER},
		#{creHour,jdbcType=INTEGER},
		#{req,jdbcType=BIGINT}, #{bid,jdbcType=INTEGER},#{appid,jdbcType=VARCHAR},#{adpid,jdbcType=VARCHAR},
		#{exp,jdbcType=INTEGER}, #{clk,jdbcType=INTEGER},
		#{invest,jdbcType=BIGINT},
		#{timeout,jdbcType=INTEGER}, #{nobid,jdbcType=BIGINT},
		#{lower,jdbcType=INTEGER}, #{overqps,jdbcType=BIGINT},
		#{error,jdbcType=INTEGER}, #{win,jdbcType=BIGINT)
	</insert>
	<insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatform">
		insert into quota_platform
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="platformId != null">
				platform_id,
			</if>
			<if test="appid != null">
				appid,
			</if>
			<if test="adpid != null">
				adpid,
			</if>
			<if test="creDay != null">
				cre_day,
			</if>
			<if test="creHour != null">
				cre_hour,
			</if>
			<if test="req != null">
				req,
			</if>
			<if test="bid != null">
				bid,
			</if>
			<if test="exp != null">
				exp,
			</if>
			<if test="clk != null">
				clk,
			</if>
			<if test="invest != null">
				invest,
			</if>
			<if test="timeout != null">
				timeout,
			</if>
			<if test="nobid != null">
				nobid,
			</if>
			<if test="lower != null">
				lower,
			</if>
			<if test="overqps != null">
				overqps,
			</if>
			<if test="error != null">
				error,
			</if>
			<if test="win != null">
				win,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="platformId != null">
				#{platformId,jdbcType=VARCHAR},
			</if>
			<if test="appid != null">
				#{appid,jdbcType=VARCHAR},
			</if>
			<if test="adpid != null">
				#{adpid,jdbcType=VARCHAR},
			</if>
			<if test="creDay != null">
				#{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				#{creHour,jdbcType=INTEGER},
			</if>
			<if test="req != null">
				#{req,jdbcType=BIGINT},
			</if>
			<if test="bid != null">
				#{bid,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				#{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				#{clk,jdbcType=INTEGER},
			</if>
			<if test="invest != null">
				#{invest,jdbcType=BIGINT},
			</if>
			<if test="timeout != null">
				#{timeout,jdbcType=INTEGER},
			</if>
			<if test="nobid != null">
				#{nobid,jdbcType=BIGINT},
			</if>
			<if test="lower != null">
				#{lower,jdbcType=INTEGER},
			</if>
			<if test="overqps != null">
				#{overqps,jdbcType=BIGINT},
			</if>
			<if test="error != null">
				#{error,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				#{win,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatformExample"
		resultType="java.lang.Integer">
		select count(*) from quota_platform
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update quota_platform
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.platformId != null">
				platform_id = #{record.platformId,jdbcType=VARCHAR},
			</if>
			<if test="record.appid != null">
				appid = #{record.appid,jdbcType=VARCHAR},
			</if>
			<if test="record.adpid != null">
				adpid = #{record.adpid,jdbcType=VARCHAR},
			</if>
			<if test="record.creDay != null">
				cre_day = #{record.creDay,jdbcType=INTEGER},
			</if>
			<if test="record.creHour != null">
				cre_hour = #{record.creHour,jdbcType=INTEGER},
			</if>
			<if test="record.req != null">
				req = #{record.req,jdbcType=BIGINT},
			</if>
			<if test="record.bid != null">
				bid = #{record.bid,jdbcType=INTEGER},
			</if>
			<if test="record.exp != null">
				exp = #{record.exp,jdbcType=INTEGER},
			</if>
			<if test="record.clk != null">
				clk = #{record.clk,jdbcType=INTEGER},
			</if>
			<if test="record.invest != null">
				invest = #{record.invest,jdbcType=BIGINT},
			</if>
			<if test="record.timeout != null">
				timeout = #{record.timeout,jdbcType=INTEGER},
			</if>
			<if test="record.nobid != null">
				nobid = #{record.nobid,jdbcType=BIGINT},
			</if>
			<if test="record.lower != null">
				lower = #{record.lower,jdbcType=INTEGER},
			</if>
			<if test="record.overqps != null">
				overqps = #{record.overqps,jdbcType=BIGINT},
			</if>
			<if test="record.error != null">
				error = #{record.error,jdbcType=INTEGER},
			</if>
			<if test="record.win != null">
				win = #{record.win,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update quota_platform
		set id = #{record.id,jdbcType=INTEGER},
		platform_id = #{record.platformId,jdbcType=VARCHAR},
		appid = #{record.appid,jdbcType=VARCHAR},
		adpid = #{record.adpid,jdbcType=VARCHAR},
		cre_day =
		#{record.creDay,jdbcType=INTEGER},
		cre_hour =
		#{record.creHour,jdbcType=INTEGER},
		req =
		#{record.req,jdbcType=BIGINT},
		bid = #{record.bid,jdbcType=INTEGER},
		exp = #{record.exp,jdbcType=INTEGER},
		clk =
		#{record.clk,jdbcType=INTEGER},
		invest =
		#{record.invest,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatform">
		update quota_platform
		<set>
			<if test="platformId != null">
				platform_id = #{platformId,jdbcType=VARCHAR},
			</if>
			<if test="appid != null">
				appid = #{appid,jdbcType=VARCHAR},
			</if>
			<if test="adpid != null">
				adpid = #{adpid,jdbcType=VARCHAR},
			</if>
			<if test="creDay != null">
				cre_day = #{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				cre_hour = #{creHour,jdbcType=INTEGER},
			</if>
			<if test="req != null">
				req = #{req,jdbcType=BIGINT},
			</if>
			<if test="bid != null">
				bid = #{bid,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				exp = #{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				clk = #{clk,jdbcType=INTEGER},
			</if>
			<if test="invest != null">
				invest = #{invest,jdbcType=BIGINT},
			</if>
			<if test="timeout != null">
				timeout = #{timeout,jdbcType=INTEGER},
			</if>
			<if test="nobid != null">
				nobid = #{nobid,jdbcType=BIGINT},
			</if>
			<if test="lower != null">
				lower = #{lower,jdbcType=INTEGER},
			</if>
			<if test="overqps != null">
				overqps = #{overqps,jdbcType=BIGINT},
			</if>
			<if test="error != null">
				error = #{error,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				win = #{win,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatform">
		update quota_platform
		set
		platform_id = #{platformId,jdbcType=VARCHAR},
		appid = #{appid,jdbcType=VARCHAR},
		adpid = #{adpid,jdbcType=VARCHAR},
		cre_day = #{creDay,jdbcType=INTEGER},
		cre_hour =
		#{creHour,jdbcType=INTEGER},
		req = #{req,jdbcType=BIGINT},
		bid =
		#{bid,jdbcType=INTEGER},
		exp = #{exp,jdbcType=INTEGER},
		clk =
		#{clk,jdbcType=INTEGER},
		invest = #{invest,jdbcType=BIGINT}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="selecAllByCreday" parameterType="com.iwanvi.nvwa.dao.model.QuotaPlatformExample"
		resultMap="BaseResultMap">
		SELECT
		cre_day,
		SUM(req) AS req,
		SUM(bid) AS bid,
		SUM(exp) AS exp,
		SUM(clk) AS clk,
		SUM(invest) AS invest,
        sum(timeout) as timeout,
        sum(nobid) as nobid,
        sum(lower) as lower,
        sum(overqps) as overqps,
        sum(error) as error,
        sum(win) as win
		FROM
		quota_platform
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		GROUP BY cre_day
	</select>
	<select id="getOneFcByhour" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`consumer_name` as 'consumername',
		`flow_consumer`.`id` as 'cid',
		`quota_platform`.`cre_hour` as
		'cre_hour',
		sum(req) as 'req',
		sum(exp) as 'exp',
		sum(clk) as 'clk',
		sum(bid) as 'bid',
		sum(timeout) as 'timeout',
		sum(nobid) as 'nobid',
		sum(lower) as 'lower',
		sum(overqps) as 'overqps',
		sum(error) as 'error',
		sum(win) as 'win',
		sum(invest) as 'invest'
		from
		quota_platform ,
		flow_consumer
		where `flow_consumer`.`dsp_id` =
		quota_platform.`platform_id`
		and quota_platform.`cre_day` between
		#{start} and #{end}
		and
		`flow_consumer`.`id` = #{dx_media}
		<if test="all == null ">
			group by quota_platform.`cre_hour`
		</if>
	</select>
	<select id="getPlatformsDataByHour" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`consumer_name` AS 'consumername',
		`quota_platform`.`cre_hour` AS
		'cre_hour',
		`flow_consumer`.`id` AS
		'cid',
        flow_consumer.dsp_id dspId,
		SUM(`quota_platform`.`req`) AS 'req',
		SUM(`quota_platform`.`bid`) AS 'bid',
		SUM(`quota_platform`.`exp`) AS 'exp',
		SUM(`quota_platform`.`clk`) AS 'clk',
        sum(timeout) as 'timeout',
        sum(nobid) as 'nobid',
        sum(lower) as 'lower',
        sum(overqps) as 'overqps',
        sum(error) as 'error',
        sum(win) as 'win'
		FROM quota_platform ,
		flow_consumer
		WHERE
		`flow_consumer`.`dsp_id`=
		`quota_platform`.`platform_id`
		AND `flow_consumer`.`id` IN
		<foreach item="list" index="index" collection="list" open="("
			separator="," close=")"> #{list}</foreach>
		AND (`quota_platform`.cre_day BETWEEN #{start} AND #{end})
		GROUP BY
		`quota_platform`.`cre_hour`,`flow_consumer`.`id`
	</select>
	<select id="getPlatformsDataToday" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`dsp_id` AS 'dspId',
		`flow_consumer`.`consumer_name` AS 'consumername',
		`flow_consumer`.`id` AS
		'cid',
		SUM(`quota_platform`.`req`) AS 'req',
		SUM(`quota_platform`.`bid`) AS 'bid',
		SUM(`quota_platform`.`exp`) AS 'exp',
		SUM(`quota_platform`.invest) AS invest,
		SUM(`quota_platform`.`clk`) AS 'clk',
		SUM(`quota_platform`.`timeout`) AS 'timeout',
		SUM(`quota_platform`.`nobid`) AS 'nobid',
		SUM(`quota_platform`.`lower`) AS 'lower',
		SUM(`quota_platform`.`overqps`) AS 'overqps',
		SUM(`quota_platform`.`error`) AS 'error',
		SUM(`quota_platform`.`win`) AS 'win'
		FROM quota_platform ,
		flow_consumer
		WHERE
		`flow_consumer`.`dsp_id`=
		`quota_platform`.`platform_id`
		AND `flow_consumer`.`id` IN
		<foreach item="list" index="index" collection="list" open="("
			separator="," close=")"> #{list}</foreach>
		AND (`quota_platform`.cre_day BETWEEN #{start} AND #{end})
		GROUP BY
		`flow_consumer`.`id`
	</select>
	<select id="getOnePlatformDataByDay" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		<!-- SELECT quota_platform.`cre_day` AS 'cre_day', `flow_consumer`.`consumer_name` 
			AS 'consumerName', `flow_consumer`.`id` AS 'cid', SUM(req) AS 'req', SUM(EXP) 
			AS 'exp', SUM(clk) AS 'clk', SUM(bid) AS 'bid', SUM(invest)/100000 AS 'investment' 
			FROM quota_platform , flow_consumer WHERE `flow_consumer`.`consumer_uuid`= 
			`quota_platform`.`platform_id` AND (`quota_platform`.cre_day BETWEEN #{startDate} 
			AND #{endDate}) AND `flow_consumer`.`id` = #{dx_media} -->
		SELECT quota_platform.`cre_day` AS 'cre_day'
		,`flow_consumer`.`consumer_name` AS 'consumername',
		`flow_consumer`.`id` AS 'cid', SUM(req) AS 'req', SUM(EXP) AS 'exp',
		SUM(clk) AS 'clk', SUM(bid) AS 'bid', SUM(invest) AS
		'invest'
		FROM flow_consumer
		left join quota_platform
		on
		`flow_consumer`.`dsp_id`= `quota_platform`.`platform_id` and
		`quota_platform`.cre_day BETWEEN #{startDate}
		AND #{endDate}
		where
		`flow_consumer`.`id` = #{dx_media}
		<if test="all == null ">
			GROUP BY quota_platform.`cre_day`
		</if>
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
	<select id="getOnePlatformPageDataByDay" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT quota_platform.`cre_day` AS 'cre_day'
		,`flow_consumer`.`consumer_name` AS 'consumername',
		`flow_consumer`.`id` AS 'cid', SUM(req) AS 'req', SUM(EXP) AS 'exp',
		SUM(clk) AS 'clk', SUM(bid) AS 'bid', SUM(invest) AS
		'invest'
		FROM flow_consumer
		left join quota_platform
		on
		`flow_consumer`.`dsp_id`= `quota_platform`.`platform_id`
		where
		`quota_platform`.cre_day BETWEEN #{startDate} 
		AND #{endDate} and
		`flow_consumer`.`id` = #{dx_media}
		<if test="all == null ">
			GROUP BY quota_platform.`cre_day`
		</if>
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
	
	<select id="getPlatformByDayHour" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT * from quota_platform
		where cre_day = #{day} and cre_hour = #{hour} limit 1
	</select>

    <select id="sumByDay" parameterType="java.util.Map" resultMap="BaseResultMap">
        select sum(exp) exp, sum(req) req, sum(clk) clk, sum(timeout) timeout, sum(nobid) nobid, sum(bid) bid,
        sum(error) error, sum(win) win, sum(overqps) overqps, sum(lower) lower, sum(invest) invest,
        cre_day
        from quota_platform
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and cre_day between ${sDate} and ${eDate}
                </if>
                <if test="pid != null and pid != ''">
                    and platform_id = #{pid}
                </if>
                <if test="appids != null and appids.size > 0">
                    and appid in (
                    <foreach collection="appids" item="appid" separator=",">
                        #{appid}
                    </foreach>
                    )
                </if>
                <if test="adpids != null and adpids.size > 0">
                    and adpid in (
                    <foreach collection="adpids" item="adpid" separator=",">
                        #{adpid}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        group by cre_day
    </select>
    <select id="sumByDayWithGroup" parameterType="java.util.Map" resultMap="BaseResultMap">
        select sum(exp) exp, sum(req) req, sum(clk) clk, sum(timeout) timeout, sum(nobid) nobid, sum(bid) bid,
        sum(error) error, sum(win) win, sum(overqps) overqps, sum(lower) lower, sum(invest) invest
        <if test="groupItem != null">
            , ${groupItem} item_id
        </if>
        from quota_platform
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and cre_day between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and platform_id in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="appids != null and appids.size > 0">
                    and appid in (
                    <foreach collection="appids" item="appid" separator=",">
                        #{appid}
                    </foreach>
                    )
                </if>
                <if test="adpids != null and adpids.size > 0">
                    and adpid in (
                    <foreach collection="adpids" item="adpid" separator=",">
                        #{adpid}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        <if test="groupItem != null">
            group by ${groupItem}
        </if>
    </select>
    <select id="detailByDay" parameterType="java.util.Map" resultMap="BaseResultMap">
        select sum(exp) exp, sum(req) req, sum(clk) clk, sum(timeout) timeout, sum(nobid) nobid, sum(bid) bid,
        sum(error) error, sum(win) win, sum(overqps) overqps, sum(lower) lower, sum(invest) invest,
        cre_day
        from quota_platform
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and cre_day between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and platform_id in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="appids != null and appids.size > 0">
                    and appid in (
                    <foreach collection="appids" item="appid" separator=",">
                        #{appid}
                    </foreach>
                    )
                </if>
                <if test="adpids != null and adpids.size > 0">
                    and adpid in (
                    <foreach collection="adpids" item="adpid" separator=",">
                        #{adpid}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        group by cre_day
    </select>
    <select id="sumItemByDay" parameterType="java.util.Map" resultMap="BaseResultMap">
        select sum(exp) exp, sum(req) req, sum(clk) clk, sum(timeout) timeout, sum(nobid) nobid, sum(bid) bid,
        sum(error) error, sum(win) win, sum(overqps) overqps, sum(lower) lower, sum(invest) invest,
        cre_day, ${groupItem} item_id
        from quota_platform
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and cre_day between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and platform_id in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="appids != null and appids.size > 0">
                    and appid in (
                    <foreach collection="appids" item="appid" separator=",">
                        #{appid}
                    </foreach>
                    )
                </if>
                <if test="adpids != null and adpids.size > 0">
                    and adpid in (
                    <foreach collection="adpids" item="adpid" separator=",">
                        #{adpid}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        group by ${groupItem}, cre_day
    </select>
</mapper>