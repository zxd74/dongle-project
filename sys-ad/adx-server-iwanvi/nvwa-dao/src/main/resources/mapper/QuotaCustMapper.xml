<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwanvi.nvwa.dao.QuotaCustMapper">
    <resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.QuotaCust">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="cre_day" property="creDay" jdbcType="INTEGER"/>
        <result column="cre_hour" property="creHour" jdbcType="INTEGER"/>
        <result column="exp" property="exp" jdbcType="INTEGER"/>
        <result column="clk" property="clk" jdbcType="INTEGER"/>
        <result column="cust_id" property="custId" jdbcType="INTEGER"/>
        <result column="cost" property="cost" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, uuid, type, cre_day, cre_hour, exp, clk, cost
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iwanvi.nvwa.dao.model.QuotaCustExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from quota_cust
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from quota_cust
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from quota_cust
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaCustExample">
        delete from quota_cust
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.QuotaCust">
        insert into quota_cust (id, uuid, type,
          cre_day, cre_hour, exp,
          clk, cost)
        values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
          #{creDay,jdbcType=INTEGER}, #{creHour,jdbcType=INTEGER}, #{exp,jdbcType=INTEGER},
          #{clk,jdbcType=INTEGER}, #{cost,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaCust">
        insert into quota_cust
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="creDay != null">
                cre_day,
            </if>
            <if test="creHour != null">
                cre_hour,
            </if>
            <if test="exp != null">
                exp,
            </if>
            <if test="clk != null">
                clk,
            </if>
            <if test="cost != null">
                cost,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="creDay != null">
                #{creDay,jdbcType=INTEGER},
            </if>
            <if test="creHour != null">
                #{creHour,jdbcType=INTEGER},
            </if>
            <if test="exp != null">
                #{exp,jdbcType=INTEGER},
            </if>
            <if test="clk != null">
                #{clk,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                #{cost,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaCustExample"
            resultType="java.lang.Integer">
        select count(*) from quota_cust
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update quota_cust
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.uuid != null">
                uuid = #{record.uuid,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.creDay != null">
                cre_day = #{record.creDay,jdbcType=INTEGER},
            </if>
            <if test="record.creHour != null">
                cre_hour = #{record.creHour,jdbcType=INTEGER},
            </if>
            <if test="record.exp != null">
                exp = #{record.exp,jdbcType=INTEGER},
            </if>
            <if test="record.clk != null">
                clk = #{record.clk,jdbcType=INTEGER},
            </if>
            <if test="record.cost != null">
                cost = #{record.cost,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update quota_cust
        set id = #{record.id,jdbcType=INTEGER},
        uuid = #{record.uuid,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER},
        cre_day = #{record.creDay,jdbcType=INTEGER},
        cre_hour = #{record.creHour,jdbcType=INTEGER},
        exp = #{record.exp,jdbcType=INTEGER},
        clk = #{record.clk,jdbcType=INTEGER},
        cost = #{record.cost,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaCust">
        update quota_cust
        <set>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="creDay != null">
                cre_day = #{creDay,jdbcType=INTEGER},
            </if>
            <if test="creHour != null">
                cre_hour = #{creHour,jdbcType=INTEGER},
            </if>
            <if test="exp != null">
                exp = #{exp,jdbcType=INTEGER},
            </if>
            <if test="clk != null">
                clk = #{clk,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                cost = #{cost,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.QuotaCust">
        update quota_cust
        set uuid = #{uuid,jdbcType=VARCHAR},
          type = #{type,jdbcType=INTEGER},
          cre_day = #{creDay,jdbcType=INTEGER},
          cre_hour = #{creHour,jdbcType=INTEGER},
          exp = #{exp,jdbcType=INTEGER},
          clk = #{clk,jdbcType=INTEGER},
          cost = #{cost,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByTypeAndDay" resultMap="BaseResultMap">
        select qc.cre_day, sum(qc.exp) exp, sum(qc.clk) clk, sum(qc.cost) cost
        from quota_cust qc
        where qc.type = ${type}
        and qc.cre_day between ${sDay} and ${eDay}
        <if test="uuids.size() > 0">
            and qc.uuid in
            <foreach collection="uuids" item="listItem" open="(" close=")"
                     separator=",">
                #{listItem}
            </foreach>
        </if>
        group by qc.cre_day
    </select>
    <select id="selectByTypeAndDayAndUuid" resultMap="BaseResultMap">
        select c.id cust_id, c.full_name name, qc.cre_day, sum(qc.exp) exp, sum(qc.clk) clk, sum(qc.cost) cost
        from quota_cust qc
        left join company c on c.uuid = qc.uuid
        where qc.cre_day between ${sDay} and ${eDay}
        and c.uuid =#{uuid, jdbcType=VARCHAR}
        group by qc.cre_day
    </select>
    
	<select id="getCustList" parameterType="java.util.Map" resultType="java.util.HashMap">
		select t2.uuid aderId, t3.uuid agentId
		from orders t1, company t2, company t3
		where t1.cust_id = t2.id and t2.aid = t3.id and t1.id in (${ids})
	</select>
</mapper>