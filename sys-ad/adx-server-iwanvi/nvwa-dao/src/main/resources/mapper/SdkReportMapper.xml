<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwanvi.nvwa.dao.SdkReportMapper">
  <resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.SdkReport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="INTEGER" property="date" />
    <result column="media_name" jdbcType="VARCHAR" property="mediaName" />
    <result column="position_id" jdbcType="VARCHAR" property="positionId" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="position_type" jdbcType="VARCHAR" property="positionType" />
    <result column="exp" jdbcType="BIGINT" property="exp" />
    <result column="clk" jdbcType="BIGINT" property="clk" />
    <result column="ctr" jdbcType="DOUBLE" property="ctr" />
    <result column="fr" jdbcType="DOUBLE" property="fr" />
    <result column="income" jdbcType="DOUBLE" property="income" />
    <result column="cpm" jdbcType="DOUBLE" property="cpm" />
    <result column="cpc" jdbcType="DOUBLE" property="cpc" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="ecpm" jdbcType="DOUBLE" property="ecpm" />
    <result column="clk_income" jdbcType="DOUBLE" property="clkIncome" />
    <result column="exp_income" jdbcType="DOUBLE" property="expIncome" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, date, media_name, position_id, position_name, position_type, exp, clk, ctr, fr,
    income, cpm, cpc, app_id, app_name, linkman, ecpm, clk_income, exp_income, type, 
    pid
  </sql>
  <select id="selectByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sdk_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sdk_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sdk_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkReportExample">
    delete from sdk_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.SdkReport">
    insert into sdk_report (id, date, media_name, 
      position_id, position_name, position_type, 
      exp, clk, ctr, fr,
      income, cpm, cpc, app_id, 
      app_name, linkman, ecpm, 
      clk_income, exp_income, type, 
      pid)
    values (#{id,jdbcType=INTEGER}, #{date,jdbcType=INTEGER}, #{mediaName,jdbcType=VARCHAR}, 
      #{positionId,jdbcType=VARCHAR}, #{positionName,jdbcType=VARCHAR}, #{positionType,jdbcType=VARCHAR}, 
      #{exp,jdbcType=BIGINT}, #{clk,jdbcType=BIGINT}, #{ctr,jdbcType=DOUBLE}, #{fr,jdbcType=DOUBLE},
      #{income,jdbcType=DOUBLE}, #{cpm,jdbcType=DOUBLE}, #{cpc,jdbcType=DOUBLE}, #{appId,jdbcType=VARCHAR}, 
      #{appName,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, #{ecpm,jdbcType=DOUBLE}, 
      #{clkIncome,jdbcType=DOUBLE}, #{expIncome,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.SdkReport">
    insert into sdk_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="mediaName != null">
        media_name,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="positionName != null">
        position_name,
      </if>
      <if test="positionType != null">
        position_type,
      </if>
      <if test="exp != null">
        exp,
      </if>
      <if test="clk != null">
        clk,
      </if>
      <if test="ctr != null">
        ctr,
      </if>
      <if test="fr != null">
        fr,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="cpm != null">
        cpm,
      </if>
      <if test="cpc != null">
        cpc,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="ecpm != null">
        ecpm,
      </if>
      <if test="clkIncome != null">
        clk_income,
      </if>
      <if test="expIncome != null">
        exp_income,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=INTEGER},
      </if>
      <if test="mediaName != null">
        #{mediaName,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="positionType != null">
        #{positionType,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        #{exp,jdbcType=BIGINT},
      </if>
      <if test="clk != null">
        #{clk,jdbcType=BIGINT},
      </if>
      <if test="ctr != null">
        #{ctr,jdbcType=DOUBLE},
      </if>
      <if test="fr != null">
        #{fr,jdbcType=DOUBLE},
      </if>
      <if test="income != null">
        #{income,jdbcType=DOUBLE},
      </if>
      <if test="cpm != null">
        #{cpm,jdbcType=DOUBLE},
      </if>
      <if test="cpc != null">
        #{cpc,jdbcType=DOUBLE},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="ecpm != null">
        #{ecpm,jdbcType=DOUBLE},
      </if>
      <if test="clkIncome != null">
        #{clkIncome,jdbcType=DOUBLE},
      </if>
      <if test="expIncome != null">
        #{expIncome,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkReportExample" resultType="java.lang.Long">
    select count(*) from sdk_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sdk_report
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=INTEGER},
      </if>
      <if test="record.mediaName != null">
        media_name = #{record.mediaName,jdbcType=VARCHAR},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionName != null">
        position_name = #{record.positionName,jdbcType=VARCHAR},
      </if>
      <if test="record.positionType != null">
        position_type = #{record.positionType,jdbcType=VARCHAR},
      </if>
      <if test="record.exp != null">
        exp = #{record.exp,jdbcType=BIGINT},
      </if>
      <if test="record.clk != null">
        clk = #{record.clk,jdbcType=BIGINT},
      </if>
      <if test="record.ctr != null">
        ctr = #{record.ctr,jdbcType=DOUBLE},
      </if>
      <if test="record.fr != null">
        fr = #{record.fr,jdbcType=DOUBLE},
      </if>
      <if test="record.income != null">
        income = #{record.income,jdbcType=DOUBLE},
      </if>
      <if test="record.cpm != null">
        cpm = #{record.cpm,jdbcType=DOUBLE},
      </if>
      <if test="record.cpc != null">
        cpc = #{record.cpc,jdbcType=DOUBLE},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.ecpm != null">
        ecpm = #{record.ecpm,jdbcType=DOUBLE},
      </if>
      <if test="record.clkIncome != null">
        clk_income = #{record.clkIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.expIncome != null">
        exp_income = #{record.expIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sdk_report
    set id = #{record.id,jdbcType=INTEGER},
      date = #{record.date,jdbcType=INTEGER},
      media_name = #{record.mediaName,jdbcType=VARCHAR},
      position_id = #{record.positionId,jdbcType=VARCHAR},
      position_name = #{record.positionName,jdbcType=VARCHAR},
      position_type = #{record.positionType,jdbcType=VARCHAR},
      exp = #{record.exp,jdbcType=BIGINT},
      clk = #{record.clk,jdbcType=BIGINT},
      ctr = #{record.ctr,jdbcType=DOUBLE},
      fr = #{record.fr,jdbcType=DOUBLE},
      income = #{record.income,jdbcType=DOUBLE},
      cpm = #{record.cpm,jdbcType=DOUBLE},
      cpc = #{record.cpc,jdbcType=DOUBLE},
      app_id = #{record.appId,jdbcType=VARCHAR},
      app_name = #{record.appName,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      ecpm = #{record.ecpm,jdbcType=DOUBLE},
      clk_income = #{record.clkIncome,jdbcType=DOUBLE},
      exp_income = #{record.expIncome,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.SdkReport">
    update sdk_report
    <set>
      <if test="date != null">
        date = #{date,jdbcType=INTEGER},
      </if>
      <if test="mediaName != null">
        media_name = #{mediaName,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="positionType != null">
        position_type = #{positionType,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        exp = #{exp,jdbcType=BIGINT},
      </if>
      <if test="clk != null">
        clk = #{clk,jdbcType=BIGINT},
      </if>
      <if test="ctr != null">
        ctr = #{ctr,jdbcType=DOUBLE},
      </if>
      <if test="fr != null">
        fr = #{fr,jdbcType=DOUBLE},
      </if>
      <if test="income != null">
        income = #{income,jdbcType=DOUBLE},
      </if>
      <if test="cpm != null">
        cpm = #{cpm,jdbcType=DOUBLE},
      </if>
      <if test="cpc != null">
        cpc = #{cpc,jdbcType=DOUBLE},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="ecpm != null">
        ecpm = #{ecpm,jdbcType=DOUBLE},
      </if>
      <if test="clkIncome != null">
        clk_income = #{clkIncome,jdbcType=DOUBLE},
      </if>
      <if test="expIncome != null">
        exp_income = #{expIncome,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.SdkReport">
    update sdk_report
    set date = #{date,jdbcType=INTEGER},
      media_name = #{mediaName,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=VARCHAR},
      position_name = #{positionName,jdbcType=VARCHAR},
      position_type = #{positionType,jdbcType=VARCHAR},
      exp = #{exp,jdbcType=BIGINT},
      clk = #{clk,jdbcType=BIGINT},
      ctr = #{ctr,jdbcType=DOUBLE},
      fr = #{fr,jdbcType=DOUBLE},
      income = #{income,jdbcType=DOUBLE},
      cpm = #{cpm,jdbcType=DOUBLE},
      cpc = #{cpc,jdbcType=DOUBLE},
      app_id = #{appId,jdbcType=VARCHAR},
      app_name = #{appName,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      ecpm = #{ecpm,jdbcType=DOUBLE},
      clk_income = #{clkIncome,jdbcType=DOUBLE},
      exp_income = #{expIncome,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.iwanvi.nvwa.dao.model.SdkReportExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from sdk_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sdk_report
    (id, date, media_name, position_id, position_name, position_type, exp, clk, ctr,
      fr, income, cpm, cpc, app_id, app_name, linkman, ecpm, clk_income, exp_income, 
      type, pid)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.date,jdbcType=INTEGER}, #{item.mediaName,jdbcType=VARCHAR}, 
        #{item.positionId,jdbcType=VARCHAR}, #{item.positionName,jdbcType=VARCHAR}, #{item.positionType,jdbcType=VARCHAR}, 
        #{item.exp,jdbcType=BIGINT}, #{item.clk,jdbcType=BIGINT}, #{item.ctr,jdbcType=DOUBLE},
        #{item.fr,jdbcType=DOUBLE}, #{item.income,jdbcType=DOUBLE}, #{item.cpm,jdbcType=DOUBLE}, 
        #{item.cpc,jdbcType=DOUBLE}, #{item.appId,jdbcType=VARCHAR}, #{item.appName,jdbcType=VARCHAR}, 
        #{item.linkman,jdbcType=VARCHAR}, #{item.ecpm,jdbcType=DOUBLE}, #{item.clkIncome,jdbcType=DOUBLE}, 
        #{item.expIncome,jdbcType=DOUBLE}, #{item.type,jdbcType=INTEGER}, #{item.pid,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sdk_report (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'date'.toString() == column.value">
          #{item.date,jdbcType=INTEGER}
        </if>
        <if test="'media_name'.toString() == column.value">
          #{item.mediaName,jdbcType=VARCHAR}
        </if>
        <if test="'position_id'.toString() == column.value">
          #{item.positionId,jdbcType=VARCHAR}
        </if>
        <if test="'position_name'.toString() == column.value">
          #{item.positionName,jdbcType=VARCHAR}
        </if>
        <if test="'position_type'.toString() == column.value">
          #{item.positionType,jdbcType=VARCHAR}
        </if>
        <if test="'exp'.toString() == column.value">
          #{item.exp,jdbcType=BIGINT}
        </if>
        <if test="'clk'.toString() == column.value">
          #{item.clk,jdbcType=BIGINT}
        </if>
        <if test="'ctr'.toString() == column.value">
          #{item.ctr,jdbcType=DOUBLE}
        </if>
        <if test="'fr'.toString() == column.value">
          #{item.fr,jdbcType=DOUBLE}
        </if>
        <if test="'income'.toString() == column.value">
          #{item.income,jdbcType=DOUBLE}
        </if>
        <if test="'cpm'.toString() == column.value">
          #{item.cpm,jdbcType=DOUBLE}
        </if>
        <if test="'cpc'.toString() == column.value">
          #{item.cpc,jdbcType=DOUBLE}
        </if>
        <if test="'app_id'.toString() == column.value">
          #{item.appId,jdbcType=VARCHAR}
        </if>
        <if test="'app_name'.toString() == column.value">
          #{item.appName,jdbcType=VARCHAR}
        </if>
        <if test="'linkman'.toString() == column.value">
          #{item.linkman,jdbcType=VARCHAR}
        </if>
        <if test="'ecpm'.toString() == column.value">
          #{item.ecpm,jdbcType=DOUBLE}
        </if>
        <if test="'clk_income'.toString() == column.value">
          #{item.clkIncome,jdbcType=DOUBLE}
        </if>
        <if test="'exp_income'.toString() == column.value">
          #{item.expIncome,jdbcType=DOUBLE}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'pid'.toString() == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

    <select id="sumReportWithDate" resultMap="BaseResultMap" parameterType="java.util.Map">
        select date, sum(exp) exp, sum(clk) clk, sum(income) income, sum(exp_income) exp_income,
        sum(clk_income) clk_income, sum(income)*1000/sum(exp) cpm, sum(income)/sum(clk) cpc, sum(clk)/sum(exp) ctr
        from sdk_report
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and date between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and pid in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="types != null and types.size > 0">
                    and type in (
                    <foreach collection="types" item="type" separator=",">
                        #{type}
                    </foreach>
                    )
                </if>
                <if test="apps != null and apps.size > 0">
                    and app_id in (
                    <foreach collection="apps" item="app" separator=",">
                        #{app}
                    </foreach>
                    )
                </if>
                <if test="posIds != null and posIds.size > 0">
                    and position_id in (
                    <foreach collection="posIds" item="posId" separator=",">
                        #{posId}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        group by date
    </select>
    <select id="sumReportWithGroup" resultMap="BaseResultMap" parameterType="java.util.Map">
        select sum(exp) exp, sum(clk) clk, sum(income) income, sum(exp_income) exp_income,
        sum(clk_income) clk_income, sum(income)*1000/sum(exp) cpm, sum(income)/sum(clk) cpc, sum(clk)/sum(exp) ctr,
        case when count(distinct type) > 1  then null
             when count(distinct type) = 1 then max(type) end as type
            ,${groupItem}, ${groupItem} item_id
        from sdk_report
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and date between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and pid in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="types != null and types.size > 0">
                    and type in (
                    <foreach collection="types" item="type" separator=",">
                        #{type}
                    </foreach>
                    )
                </if>
                <if test="apps != null and apps.size > 0">
                    and app_id in (
                    <foreach collection="apps" item="app" separator=",">
                        #{app}
                    </foreach>
                    )
                </if>
                <if test="posIds != null and posIds.size > 0">
                    and position_id in (
                    <foreach collection="posIds" item="posId" separator=",">
                        #{posId}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        <if test="groupItem != null">
            group by ${groupItem}
        </if>
    </select>
    <select id="detailReport" resultMap="BaseResultMap" parameterType="java.util.Map">
        select date, sum(exp) exp, sum(clk) clk, sum(income) income, sum(exp_income) exp_income,
        sum(clk_income) clk_income, sum(income)*1000/sum(exp) cpm, sum(income)/sum(clk) cpc, sum(clk)/sum(exp) ctr
        from sdk_report
        <where>
            <trim prefixOverrides="and">
                <if test="sDate != null and eDate != null">
                    and date between ${sDate} and ${eDate}
                </if>
                <if test="pids != null and pids.size > 0">
                    and pid in (
                    <foreach collection="pids" item="pid" separator=",">
                        #{pid}
                    </foreach>
                    )
                </if>
                <if test="types != null and types.size > 0">
                    and type in (
                    <foreach collection="types" item="type" separator=",">
                        #{type}
                    </foreach>
                    )
                </if>
                <if test="apps != null and apps.size > 0">
                    and app_id in (
                    <foreach collection="apps" item="app" separator=",">
                        #{app}
                    </foreach>
                    )
                </if>
                <if test="posIds != null and posIds.size > 0">
                    and position_id in (
                    <foreach collection="posIds" item="posId" separator=",">
                        #{posId}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
        group by date
    </select>
</mapper>