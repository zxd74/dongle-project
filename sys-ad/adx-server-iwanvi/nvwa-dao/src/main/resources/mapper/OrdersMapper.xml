<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwanvi.nvwa.dao.OrdersMapper">
	<resultMap id="BaseResultMap"
		type="com.iwanvi.nvwa.dao.model.Orders">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="cust_id" jdbcType="INTEGER" property="custId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="create_user" jdbcType="INTEGER"
			property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="update_user" jdbcType="INTEGER"
			property="updateUser" />
		<result column="run_state" jdbcType="INTEGER"
			property="runState" />
		<result column="orders_state" jdbcType="INTEGER"
			property="ordersState" />
		<result column="sale_name" jdbcType="VARCHAR"
			property="saleName" />
		<result column="put_name" jdbcType="VARCHAR" property="putName" />
		<result column="put_status" jdbcType="INTEGER"
			property="putStatus" />
		<result column="start_time" jdbcType="TIMESTAMP"
			property="startTime" />
		<result column="end_time" jdbcType="TIMESTAMP"
			property="endTime" />
		<result column="money" jdbcType="INTEGER" property="money" />
		<result column="create_type" jdbcType="INTEGER"
			property="createType" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, cust_id, remark, create_time, create_user,
		update_time,
		update_user, run_state,
		orders_state, sale_name, put_name,
		put_status, start_time, end_time, money,
		create_type
	</sql>
	<select id="selectByExample"
		parameterType="com.iwanvi.nvwa.dao.model.OrdersExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="rows != null">
			<if test="offset != null">
				limit ${offset}, ${rows}
			</if>
			<if test="offset == null">
				limit ${rows}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from orders
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.iwanvi.nvwa.dao.model.OrdersExample">
		delete from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.iwanvi.nvwa.dao.model.Orders">
		insert into orders (id, name, cust_id,
		remark,
		create_time, create_user,
		update_time, update_user, run_state,
		orders_state, sale_name, put_name,
		put_status, start_time, end_time,
		money, create_type)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{custId,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{createUser,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=INTEGER},
		#{runState,jdbcType=INTEGER},
		#{ordersState,jdbcType=INTEGER}, #{saleName,jdbcType=VARCHAR},
		#{putName,jdbcType=VARCHAR},
		#{putStatus,jdbcType=INTEGER},
		#{startTime,jdbcType=TIMESTAMP},
		#{endTime,jdbcType=TIMESTAMP},
		#{money,jdbcType=INTEGER}, #{createType,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.iwanvi.nvwa.dao.model.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="custId != null">
				cust_id,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="runState != null">
				run_state,
			</if>
			<if test="ordersState != null">
				orders_state,
			</if>
			<if test="saleName != null">
				sale_name,
			</if>
			<if test="putName != null">
				put_name,
			</if>
			<if test="putStatus != null">
				put_status,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="createType != null">
				create_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="custId != null">
				#{custId,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="runState != null">
				#{runState,jdbcType=INTEGER},
			</if>
			<if test="ordersState != null">
				#{ordersState,jdbcType=INTEGER},
			</if>
			<if test="saleName != null">
				#{saleName,jdbcType=VARCHAR},
			</if>
			<if test="putName != null">
				#{putName,jdbcType=VARCHAR},
			</if>
			<if test="putStatus != null">
				#{putStatus,jdbcType=INTEGER},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="money != null">
				#{money,jdbcType=INTEGER},
			</if>
			<if test="createType != null">
				#{createType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.iwanvi.nvwa.dao.model.OrdersExample"
		resultType="java.lang.Long">
		select count(*) from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orders
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.custId != null">
				cust_id = #{record.custId,jdbcType=INTEGER},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createUser != null">
				create_user = #{record.createUser,jdbcType=INTEGER},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateUser != null">
				update_user = #{record.updateUser,jdbcType=INTEGER},
			</if>
			<if test="record.runState != null">
				run_state = #{record.runState,jdbcType=INTEGER},
			</if>
			<if test="record.ordersState != null">
				orders_state = #{record.ordersState,jdbcType=INTEGER},
			</if>
			<if test="record.saleName != null">
				sale_name = #{record.saleName,jdbcType=VARCHAR},
			</if>
			<if test="record.putName != null">
				put_name = #{record.putName,jdbcType=VARCHAR},
			</if>
			<if test="record.putStatus != null">
				put_status = #{record.putStatus,jdbcType=INTEGER},
			</if>
			<if test="record.startTime != null">
				start_time = #{record.startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.endTime != null">
				end_time = #{record.endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.money != null">
				money = #{record.money,jdbcType=INTEGER},
			</if>
			<if test="record.createType != null">
				create_type = #{record.createType,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orders
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		cust_id =
		#{record.custId,jdbcType=INTEGER},
		remark =
		#{record.remark,jdbcType=VARCHAR},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		create_user =
		#{record.createUser,jdbcType=INTEGER},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP},
		update_user =
		#{record.updateUser,jdbcType=INTEGER},
		run_state =
		#{record.runState,jdbcType=INTEGER},
		orders_state =
		#{record.ordersState,jdbcType=INTEGER},
		sale_name =
		#{record.saleName,jdbcType=VARCHAR},
		put_name =
		#{record.putName,jdbcType=VARCHAR},
		put_status =
		#{record.putStatus,jdbcType=INTEGER},
		start_time =
		#{record.startTime,jdbcType=TIMESTAMP},
		end_time =
		#{record.endTime,jdbcType=TIMESTAMP},
		money =
		#{record.money,jdbcType=INTEGER},
		create_type =
		#{record.createType,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.iwanvi.nvwa.dao.model.Orders">
		update orders
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="custId != null">
				cust_id = #{custId,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="runState != null">
				run_state = #{runState,jdbcType=INTEGER},
			</if>
			<if test="ordersState != null">
				orders_state = #{ordersState,jdbcType=INTEGER},
			</if>
			<if test="saleName != null">
				sale_name = #{saleName,jdbcType=VARCHAR},
			</if>
			<if test="putName != null">
				put_name = #{putName,jdbcType=VARCHAR},
			</if>
			<if test="putStatus != null">
				put_status = #{putStatus,jdbcType=INTEGER},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=INTEGER},
			</if>
			<if test="createType != null">
				create_type = #{createType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.iwanvi.nvwa.dao.model.Orders">
		update orders
		set name = #{name,jdbcType=VARCHAR},
		cust_id = #{custId,jdbcType=INTEGER},
		remark =
		#{remark,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		create_user =
		#{createUser,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		update_user =
		#{updateUser,jdbcType=INTEGER},
		run_state =
		#{runState,jdbcType=INTEGER},
		orders_state =
		#{ordersState,jdbcType=INTEGER},
		sale_name =
		#{saleName,jdbcType=VARCHAR},
		put_name = #{putName,jdbcType=VARCHAR},
		put_status = #{putStatus,jdbcType=INTEGER},
		start_time =
		#{startTime,jdbcType=TIMESTAMP},
		end_time =
		#{endTime,jdbcType=TIMESTAMP},
		money = #{money,jdbcType=INTEGER},
		create_type = #{createType,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="selectOneByExample"
		parameterType="com.iwanvi.nvwa.dao.model.OrdersExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. @project https://github.com/itfsw/mybatis-generator-plugin -->
		select
		<include refid="Base_Column_List" />
		from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit 1
	</select>
	<insert id="batchInsert" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. @project https://github.com/itfsw/mybatis-generator-plugin -->
		insert into orders
		(id, name, cust_id, remark, create_time,
		create_user, update_time,
		update_user, run_state,
		orders_state,
		sale_name, put_name, put_status, start_time, end_time, money,
		create_type
		)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.id,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR},
			#{item.custId,jdbcType=INTEGER},
			#{item.remark,jdbcType=VARCHAR},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.createUser,jdbcType=INTEGER},
			#{item.updateTime,jdbcType=TIMESTAMP},
			#{item.updateUser,jdbcType=INTEGER},
			#{item.runState,jdbcType=INTEGER},
			#{item.ordersState,jdbcType=INTEGER},
			#{item.saleName,jdbcType=VARCHAR}, #{item.putName,jdbcType=VARCHAR},
			#{item.putStatus,jdbcType=INTEGER},
			#{item.startTime,jdbcType=TIMESTAMP},
			#{item.endTime,jdbcType=TIMESTAMP},
			#{item.money,jdbcType=INTEGER},
			#{item.createType,jdbcType=INTEGER})
		</foreach>
	</insert>
	<insert id="batchInsertSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. @project https://github.com/itfsw/mybatis-generator-plugin -->
		insert into orders (
		<foreach collection="selective" item="column" separator=",">
			${column.escapedColumnName}
		</foreach>
		)
		values
		<foreach collection="list" item="item" separator=",">
			(
			<foreach collection="selective" item="column" separator=",">
				<if test="'id'.toString() == column.value">
					#{item.id,jdbcType=INTEGER}
				</if>
				<if test="'name'.toString() == column.value">
					#{item.name,jdbcType=VARCHAR}
				</if>
				<if test="'cust_id'.toString() == column.value">
					#{item.custId,jdbcType=INTEGER}
				</if>
				<if test="'remark'.toString() == column.value">
					#{item.remark,jdbcType=VARCHAR}
				</if>
				<if test="'create_time'.toString() == column.value">
					#{item.createTime,jdbcType=TIMESTAMP}
				</if>
				<if test="'create_user'.toString() == column.value">
					#{item.createUser,jdbcType=INTEGER}
				</if>
				<if test="'update_time'.toString() == column.value">
					#{item.updateTime,jdbcType=TIMESTAMP}
				</if>
				<if test="'update_user'.toString() == column.value">
					#{item.updateUser,jdbcType=INTEGER}
				</if>
				<if test="'run_state'.toString() == column.value">
					#{item.runState,jdbcType=INTEGER}
				</if>
				<if test="'orders_state'.toString() == column.value">
					#{item.ordersState,jdbcType=INTEGER}
				</if>
				<if test="'sale_name'.toString() == column.value">
					#{item.saleName,jdbcType=VARCHAR}
				</if>
				<if test="'put_name'.toString() == column.value">
					#{item.putName,jdbcType=VARCHAR}
				</if>
				<if test="'put_status'.toString() == column.value">
					#{item.putStatus,jdbcType=INTEGER}
				</if>
				<if test="'start_time'.toString() == column.value">
					#{item.startTime,jdbcType=TIMESTAMP}
				</if>
				<if test="'end_time'.toString() == column.value">
					#{item.endTime,jdbcType=TIMESTAMP}
				</if>
				<if test="'money'.toString() == column.value">
					#{item.money,jdbcType=INTEGER}
				</if>
				<if test="'create_type'.toString() == column.value">
					#{item.createType,jdbcType=INTEGER}
				</if>
			</foreach>
			)
		</foreach>
	</insert>

	<sql id="basePageExample">
		<if test="order.name != '' and order.name != null">
			and o.name like concat('%',#{order.name},'%')
		</if>
		<choose>
			<when test="order.custId != null">
				and o.cust_id = #{order.custId}
			</when>
			<otherwise>
				<if test="advers != null and advers.size &gt; 0">
					and o.cust_id in
					<foreach close=")" collection="advers" item="adver"
						open="(" separator=",">
						#{adver}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<if test="order.runState != null">
			and o.run_state = #{order.runState}
		</if>
		<if test="order.createUser != null">
			and o.create_user = #{order.createUser}
		</if>
		<choose>
			<when test="order.ordersState != null">
				and o.orders_state = #{order.ordersState}
			</when>
			<otherwise>
				and o.orders_state != 0
			</otherwise>
		</choose>
	</sql>

	<sql id="Map_Base_Where_Clause">
		<choose>
			<when test="adverId != null and adverId != ''">
				and ord.cust_id = #{adverId}
			</when>
			<otherwise>
				<if test="advers != null and advers.size &gt; 0">
					and ord.cust_id in
					<foreach close=")" collection="advers" item="adver"
						open="(" separator=",">
						#{adver}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<choose>
			<when test="createUser != null and createUser !=''">
				and ord.create_user = #{createUser}
			</when>
			<otherwise>
				<if test="createUsers != null and createUsers.size &gt; 0">
					and ord.create_user in
					<foreach close=")" collection="createUsers" item="user"
						open="(" separator=",">
						#{user}
					</foreach>
				</if>
			</otherwise>
		</choose>
		<if test="orderState != null and orderState != ''">
			and ord.orders_state = #{orderState}
		</if>
	</sql>

	<select id="countByMap" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(id) from orders ord
		where 1=1
		<include refid="Map_Base_Where_Clause" />
	</select>

	<select id="selectForPage"
		resultType="com.iwanvi.nvwa.dao.model.Orders">
		select o.id id, o.run_state runState,
		o.start_time startTime,
		o.end_time endTime, o.create_time createTime,
		o.`name`
		name,o.run_state
		runState,
		o.orders_state
		ordersState,cust.full_name
		custName,o.sale_name
		saleName,o.put_name putName
		from `orders` o
		left
		join company cust
		on
		o.cust_id
		= cust.id
		where 1=1
		<include refid="basePageExample" />
		order by o.run_state desc,o.id desc
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
</mapper>