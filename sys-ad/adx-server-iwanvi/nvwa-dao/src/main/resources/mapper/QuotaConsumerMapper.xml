<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwanvi.nvwa.dao.QuotaConsumerMapper">
	<resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.QuotaConsumer">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="cre_day" property="creDay" jdbcType="INTEGER" />
		<result column="cre_hour" property="creHour" jdbcType="INTEGER" />
		<result column="consumer_id" property="consumerId" jdbcType="VARCHAR" />
		<result column="ent_id" property="entId" jdbcType="INTEGER" />
		<result column="bid" property="bid" jdbcType="INTEGER" />
		<result column="win" property="win" jdbcType="INTEGER" />
		<result column="exp" property="exp" jdbcType="INTEGER" />
		<result column="clk" property="clk" jdbcType="INTEGER" />
		<result column="investment" property="investment" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="req" property="req" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, cre_day, cre_hour, consumer_id, ent_id, bid, win, exp,
		clk,
		investment, create_time,
		req
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumerExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from quota_consumer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from quota_consumer
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		quota_consumer
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumerExample">
		delete from quota_consumer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumer">
		insert into quota_consumer
		(id, cre_day, cre_hour,
		consumer_id, ent_id, bid,
		win, exp, clk,
		investment,
		create_time, req)
		values (#{id,jdbcType=INTEGER},
		#{creDay,jdbcType=INTEGER},
		#{creHour,jdbcType=INTEGER},
		#{consumerId,jdbcType=VARCHAR}, #{entId,jdbcType=INTEGER},
		#{bid,jdbcType=INTEGER},
		#{win,jdbcType=INTEGER},
		#{exp,jdbcType=INTEGER},
		#{clk,jdbcType=INTEGER},
		#{investment,jdbcType=BIGINT},
		#{createTime,jdbcType=TIMESTAMP},
		#{req,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumer">
		insert into quota_consumer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="creDay != null">
				cre_day,
			</if>
			<if test="creHour != null">
				cre_hour,
			</if>
			<if test="consumerId != null">
				consumer_id,
			</if>
			<if test="entId != null">
				ent_id,
			</if>
			<if test="bid != null">
				bid,
			</if>
			<if test="win != null">
				win,
			</if>
			<if test="exp != null">
				exp,
			</if>
			<if test="clk != null">
				clk,
			</if>
			<if test="investment != null">
				investment,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="req != null">
				req,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="creDay != null">
				#{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				#{creHour,jdbcType=INTEGER},
			</if>
			<if test="consumerId != null">
				#{consumerId,jdbcType=VARCHAR},
			</if>
			<if test="entId != null">
				#{entId,jdbcType=INTEGER},
			</if>
			<if test="bid != null">
				#{bid,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				#{win,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				#{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				#{clk,jdbcType=INTEGER},
			</if>
			<if test="investment != null">
				#{investment,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="req != null">
				#{req,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumerExample"
		resultType="java.lang.Integer">
		select count(*) from quota_consumer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update quota_consumer
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.creDay != null">
				cre_day = #{record.creDay,jdbcType=INTEGER},
			</if>
			<if test="record.creHour != null">
				cre_hour = #{record.creHour,jdbcType=INTEGER},
			</if>
			<if test="record.consumerId != null">
				consumer_id = #{record.consumerId,jdbcType=VARCHAR},
			</if>
			<if test="record.entId != null">
				ent_id = #{record.entId,jdbcType=INTEGER},
			</if>
			<if test="record.bid != null">
				bid = #{record.bid,jdbcType=INTEGER},
			</if>
			<if test="record.win != null">
				win = #{record.win,jdbcType=INTEGER},
			</if>
			<if test="record.exp != null">
				exp = #{record.exp,jdbcType=INTEGER},
			</if>
			<if test="record.clk != null">
				clk = #{record.clk,jdbcType=INTEGER},
			</if>
			<if test="record.investment != null">
				investment = #{record.investment,jdbcType=BIGINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.req != null">
				req = #{record.req,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update quota_consumer
		set id = #{record.id,jdbcType=INTEGER},
		cre_day =
		#{record.creDay,jdbcType=INTEGER},
		cre_hour =
		#{record.creHour,jdbcType=INTEGER},
		consumer_id =
		#{record.consumerId,jdbcType=VARCHAR},
		ent_id =
		#{record.entId,jdbcType=INTEGER},
		bid = #{record.bid,jdbcType=INTEGER},
		win = #{record.win,jdbcType=INTEGER},
		exp =
		#{record.exp,jdbcType=INTEGER},
		clk = #{record.clk,jdbcType=INTEGER},
		investment = #{record.investment,jdbcType=BIGINT},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		req =
		#{record.req,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumer">
		update quota_consumer
		<set>
			<if test="creDay != null">
				cre_day = #{creDay,jdbcType=INTEGER},
			</if>
			<if test="creHour != null">
				cre_hour = #{creHour,jdbcType=INTEGER},
			</if>
			<if test="consumerId != null">
				consumer_id = #{consumerId,jdbcType=VARCHAR},
			</if>
			<if test="entId != null">
				ent_id = #{entId,jdbcType=INTEGER},
			</if>
			<if test="bid != null">
				bid = #{bid,jdbcType=INTEGER},
			</if>
			<if test="win != null">
				win = #{win,jdbcType=INTEGER},
			</if>
			<if test="exp != null">
				exp = #{exp,jdbcType=INTEGER},
			</if>
			<if test="clk != null">
				clk = #{clk,jdbcType=INTEGER},
			</if>
			<if test="investment != null">
				investment = #{investment,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="req != null">
				req = #{req,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumer">
		update
		quota_consumer
		set cre_day = #{creDay,jdbcType=INTEGER},
		cre_hour =
		#{creHour,jdbcType=INTEGER},
		consumer_id =
		#{consumerId,jdbcType=VARCHAR},
		ent_id = #{entId,jdbcType=INTEGER},
		bid
		= #{bid,jdbcType=INTEGER},
		win = #{win,jdbcType=INTEGER},
		exp =
		#{exp,jdbcType=INTEGER},
		clk = #{clk,jdbcType=INTEGER},
		investment =
		#{investment,jdbcType=BIGINT},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		req = #{req,jdbcType=BIGINT}
		where id
		= #{id,jdbcType=INTEGER}
	</update>
	<select id="selecAllByCreday" parameterType="com.iwanvi.nvwa.dao.model.QuotaConsumerExample"
		resultMap="BaseResultMap">
		SELECT
		cre_day,
		SUM(req) AS req,
		SUM(bid) AS bid,
		SUM(EXP) AS EXP,
		SUM(clk) AS clk,
		SUM(investment)/100000 AS investment
		FROM
		quota_consumer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		GROUP BY cre_day
	</select>
	<select id="getOneFcByhour" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`consumer_name` as 'consumerName',
		`flow_consumer`.`id` as 'consumerId',
		`quota_consumer`.`cre_hour` as
		'cre_hour',
		sum(req) as 'req',
		sum(exp) as 'exp',
		sum(clk) as 'clk',
		sum(bid) as 'bid',
		sum(investment) as 'investment'
		from quota_consumer ,
		entity_dsp, flow_consumer
		where `flow_consumer`.`id` =
		entity_dsp.`consumer_id`
		and quota_consumer.`ent_id`=entity_dsp.`id`
		and quota_consumer.`cre_day` between #{start} and #{end}
		and
		`flow_consumer`.`id` = #{dx_media}
		<if test="all == null ">
			group by quota_consumer.`cre_hour`
		</if>
	</select>
	<select id="getOnePlatformDataByDay" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		quota_consumer.`cre_day` AS 'cre_day',
		`flow_consumer`.`consumer_name` AS 'consumerName',
		`flow_consumer`.`id` AS 'cid',
		SUM(req) AS 'req',
		SUM(EXP) AS 'exp',
		SUM(clk) AS 'clk',
		SUM(bid) AS 'bid',
		SUM(investment) AS 'investment'
		FROM quota_consumer , entity_dsp, flow_consumer
		WHERE
		`flow_consumer`.`id` = entity_dsp.`consumer_id`
		AND
		quota_consumer.`ent_id`=entity_dsp.`id`
		AND quota_consumer.`cre_day`
		BETWEEN #{start} AND #{end}
		AND `flow_consumer`.`id` = #{dx_media}
		<if test="all == null ">
			GROUP BY quota_consumer.`cre_day`
		</if>
		<if test="start != null and limit != null">
			limit ${start},${limit}
		</if>
	</select>
	<select id="getPlatformsDataByHour" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`consumer_name` AS 'consumerName',
		`quota_consumer`.`cre_hour` AS
		'cre_hour',
		`entity_dsp`.`consumer_id` AS
		'cid',
		SUM(`quota_consumer`.`req`) AS 'req',
		SUM(`quota_consumer`.`bid`) AS 'bid',
		SUM(`quota_consumer`.`exp`) AS
		'exp',
		SUM(`quota_consumer`.`clk`) AS 'clk'
		FROM quota_consumer ,
		entity_dsp, flow_consumer
		WHERE
		`flow_consumer`.`id`=
		`entity_dsp`.`consumer_id`
		AND
		`quota_consumer`.`ent_id`
		=`entity_dsp`.`id`
		AND `entity_dsp`.`consumer_id` IN
		<foreach item="list" index="index" collection="list" open="("
			separator="," close=")"> #{list}</foreach>
		AND (`quota_consumer`.cre_day BETWEEN #{start} AND #{end})
		GROUP BY
		`quota_consumer`.`cre_hour`,`entity_dsp`.`consumer_id`
	</select>
		<select id="getPlatformsDataToday" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		`flow_consumer`.`consumer_name` AS 'consumerName',
		`entity_dsp`.`consumer_id` AS
		'cid',
		SUM(`quota_consumer`.`req`) AS 'req',
		SUM(`quota_consumer`.`bid`) AS 'bid',
		SUM(`quota_consumer`.`exp`) AS
		'exp',
		SUM(`quota_consumer`.investment)/100000 AS investment,
		SUM(`quota_consumer`.`clk`) AS 'clk'
		FROM quota_consumer ,
		entity_dsp, flow_consumer
		WHERE
		`flow_consumer`.`id`=
		`entity_dsp`.`consumer_id`
		AND
		`quota_consumer`.`ent_id`
		=`entity_dsp`.`id`
		AND `entity_dsp`.`consumer_id` IN
		<foreach item="list" index="index" collection="list" open="("
			separator="," close=")"> #{list}</foreach>
		AND (`quota_consumer`.cre_day BETWEEN #{start} AND #{end})
		GROUP BY
		`entity_dsp`.`consumer_id`
	</select>
</mapper>