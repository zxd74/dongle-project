<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwanvi.nvwa.dao.DmpPersonsMapper">
    <resultMap id="BaseResultMap" type="com.iwanvi.nvwa.dao.model.DmpPersons">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="did" jdbcType="VARCHAR" property="did"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="relation" jdbcType="INTEGER" property="relation"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="times" jdbcType="INTEGER" property="times"/>
        <result column="period" jdbcType="INTEGER" property="period"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="compute_status" jdbcType="INTEGER" property="computeStatus"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iwanvi.nvwa.dao.model.DmpPersons">
        <result column="remark" jdbcType="LONGVARCHAR" property="remark"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, did, tags, relation, status, num, update_time, times, period, type, create_user,
        create_time, compute_status
    </sql>
    <sql id="Blob_Column_List">
        remark
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.iwanvi.nvwa.dao.model.DmpPersonsExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from dmp_persons
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.iwanvi.nvwa.dao.model.DmpPersonsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from dmp_persons
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="start != null and limit != null">
            limit ${start},${limit}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from dmp_persons
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from dmp_persons
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.iwanvi.nvwa.dao.model.DmpPersonsExample">
        delete from dmp_persons
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.iwanvi.nvwa.dao.model.DmpPersons">
        insert into dmp_persons (id, name, did,
          tags, relation, status,
          num, update_time, times,
          period, type, create_user,
          create_time, compute_status, remark
          )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{did,jdbcType=VARCHAR},
          #{tags,jdbcType=VARCHAR}, #{relation,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
          #{num,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{times,jdbcType=INTEGER},
          #{period,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER},
          #{createTime,jdbcType=TIMESTAMP}, #{computeStatus,jdbcType=INTEGER}, #{remark,jdbcType=LONGVARCHAR}
          )
    </insert>
    <insert id="insertSelective" parameterType="com.iwanvi.nvwa.dao.model.DmpPersons">
        insert into dmp_persons
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="did != null">
                did,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="relation != null">
                relation,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="times != null">
                times,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="computeStatus != null">
                compute_status,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="did != null">
                #{did,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="relation != null">
                #{relation,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="times != null">
                #{times,jdbcType=INTEGER},
            </if>
            <if test="period != null">
                #{period,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="computeStatus != null">
                #{computeStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.iwanvi.nvwa.dao.model.DmpPersonsExample"
            resultType="java.lang.Integer">
        select count(*) from dmp_persons
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update dmp_persons
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.did != null">
                did = #{record.did,jdbcType=VARCHAR},
            </if>
            <if test="record.tags != null">
                tags = #{record.tags,jdbcType=VARCHAR},
            </if>
            <if test="record.relation != null">
                relation = #{record.relation,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.times != null">
                times = #{record.times,jdbcType=INTEGER},
            </if>
            <if test="record.period != null">
                period = #{record.period,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.computeStatus != null">
                compute_status = #{record.computeStatus,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update dmp_persons
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        did = #{record.did,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        relation = #{record.relation,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        times = #{record.times,jdbcType=INTEGER},
        period = #{record.period,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        compute_status = #{record.computeStatus,jdbcType=INTEGER},
        remark = #{record.remark,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update dmp_persons
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        did = #{record.did,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        relation = #{record.relation,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        times = #{record.times,jdbcType=INTEGER},
        period = #{record.period,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        compute_status = #{record.computeStatus,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.iwanvi.nvwa.dao.model.DmpPersons">
        update dmp_persons
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="did != null">
                did = #{did,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="relation != null">
                relation = #{relation,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="times != null">
                times = #{times,jdbcType=INTEGER},
            </if>
            <if test="period != null">
                period = #{period,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="computeStatus != null">
                compute_status = #{computeStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iwanvi.nvwa.dao.model.DmpPersons">
        update dmp_persons
        set name = #{name,jdbcType=VARCHAR},
          did = #{did,jdbcType=VARCHAR},
          tags = #{tags,jdbcType=VARCHAR},
          relation = #{relation,jdbcType=INTEGER},
          status = #{status,jdbcType=INTEGER},
          num = #{num,jdbcType=INTEGER},
          update_time = #{updateTime,jdbcType=TIMESTAMP},
          times = #{times,jdbcType=INTEGER},
          period = #{period,jdbcType=INTEGER},
          type = #{type,jdbcType=INTEGER},
          create_user = #{createUser,jdbcType=INTEGER},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          compute_status = #{computeStatus,jdbcType=INTEGER},
          remark = #{remark,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iwanvi.nvwa.dao.model.DmpPersons">
        update dmp_persons
        set name = #{name,jdbcType=VARCHAR},
          did = #{did,jdbcType=VARCHAR},
          tags = #{tags,jdbcType=VARCHAR},
          relation = #{relation,jdbcType=INTEGER},
          status = #{status,jdbcType=INTEGER},
          num = #{num,jdbcType=INTEGER},
          update_time = #{updateTime,jdbcType=TIMESTAMP},
          times = #{times,jdbcType=INTEGER},
          period = #{period,jdbcType=INTEGER},
          type = #{type,jdbcType=INTEGER},
          create_user = #{createUser,jdbcType=INTEGER},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          compute_status = #{computeStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>