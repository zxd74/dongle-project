package com.fftime.ffmob.common.adservices.downloader;import java.io.File;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;import com.fftime.ffmob.util.Ping;import com.fftime.ffmob.util.URLUtil;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.content.pm.PackageManager;import android.net.Uri;public class FFTAPKInstaller extends BroadcastReceiver {  private final APKStatusManager statusManager;  private final Map<String, APKDownTask> pendingTaskMap;  /**   * 启动安装后，监听安装事件的队列，key为PackageName   */  private boolean receiverRegested = false;  FFTAPKInstaller(APKStatusManager statusManager) {    this.pendingTaskMap = new ConcurrentHashMap<String, APKDownTask>();    this.statusManager = statusManager;  }  public final boolean startInstall(Context context, File apkFile, APKDownTask task) {    Intent installIntent = buildInstallIntent(apkFile);    if (installIntent != null) {      pendingTaskMap.put(task.pkgName, task);      this.regeistReceiver(context.getApplicationContext());      context.startActivity(installIntent);      return true;    } else {      return false;    }  }  public final Intent buildInstallIntent(File apkFile) {    if (apkFile.exists()) {      Intent intent = new Intent(Intent.ACTION_VIEW);      intent.setDataAndType(Uri.fromFile(apkFile), "application/vnd.android.package-archive");      intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);      return intent;    } else {      return null;    }  }  private synchronized void regeistReceiver(Context appCtxt) {    if (!receiverRegested) {      IntentFilter filter = new IntentFilter();      filter.addAction("android.intent.action.PACKAGE_ADDED");      filter.addDataScheme("package");      appCtxt.registerReceiver(this, filter);      receiverRegested = true;    }  }  public void addInstallMonitor(APKDownTask task, Context context) {    this.pendingTaskMap.put(task.pkgName, task);    this.regeistReceiver(context);  }  @Override  public void onReceive(Context context, Intent intent) {    String packageName = intent.getDataString();    if (packageName != null && packageName.startsWith("package:")) {      packageName = packageName.substring("package:".length());    }    if (pendingTaskMap.containsKey(packageName)) {      APKDownTask task = pendingTaskMap.remove(packageName);      onInstalled(task, context);    }  }  private void onInstalled(APKDownTask task, Context context) {    if (task == null) return;    int notificationId = task.cid;    if (notificationId > 0) {      NotificationManager nm =          (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);      PackageManager pm = context.getPackageManager();      FFTNotificationBuilder nb = task.getNb(context);      nb.setContentIntent(PendingIntent.getActivity(context, task.cid,          pm.getLaunchIntentForPackage(task.pkgName), 0));      nb.setContentText("点击启动").setContentTitle("应用已安装").setAutoCancel(false);      statusManager.installed(task.pkgName);      nm.notify(APKManager.NOTIFY_TAG, notificationId, nb.build());      Ping.ping(URLUtil.appendParam(task.getUrl(), APKParas.ACTKEY, APKParas.ACT_INSTALLED));    }  }}