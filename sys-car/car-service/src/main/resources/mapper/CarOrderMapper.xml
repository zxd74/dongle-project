<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongle.car.dao.mapper.CarOrderMapper">
  <resultMap id="BaseResultMap" type="com.dongle.car.dao.model.CarOrder">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="u_id" jdbcType="CHAR" property="uId" />
    <result column="shop_id" jdbcType="CHAR" property="shopId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="eval_id" jdbcType="INTEGER" property="evalId" />
    <result column="eval_level" jdbcType="VARCHAR" property="evalLevel" />
    <result column="odt" jdbcType="TIMESTAMP" property="odt" />
    <result column="cdt" jdbcType="TIMESTAMP" property="cdt" />
    <result column="udt" jdbcType="TIMESTAMP" property="udt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, u_id, shop_id, `status`, pay_status, phone, eval_id, eval_level, odt, cdt, udt
  </sql>
  <select id="selectByExample" parameterType="com.dongle.car.dao.model.CarOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from car_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_order
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from car_order
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dongle.car.dao.model.CarOrderExample">
    delete from car_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dongle.car.dao.model.CarOrder">
    insert into car_order (id, u_id, shop_id, `status`, 
      pay_status, phone, eval_id, 
      eval_level, odt, cdt, 
      udt)
    values (#{id,jdbcType=CHAR}, #{uId,jdbcType=CHAR}, #{shopId,jdbcType=CHAR}, #{status,jdbcType=INTEGER}, 
      #{payStatus,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{evalId,jdbcType=INTEGER}, 
      #{evalLevel,jdbcType=VARCHAR}, #{odt,jdbcType=TIMESTAMP}, #{cdt,jdbcType=TIMESTAMP}, 
      #{udt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dongle.car.dao.model.CarOrder">
    insert into car_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="evalId != null">
        eval_id,
      </if>
      <if test="evalLevel != null">
        eval_level,
      </if>
      <if test="odt != null">
        odt,
      </if>
      <if test="cdt != null">
        cdt,
      </if>
      <if test="udt != null">
        udt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=CHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="evalId != null">
        #{evalId,jdbcType=INTEGER},
      </if>
      <if test="evalLevel != null">
        #{evalLevel,jdbcType=VARCHAR},
      </if>
      <if test="odt != null">
        #{odt,jdbcType=TIMESTAMP},
      </if>
      <if test="cdt != null">
        #{cdt,jdbcType=TIMESTAMP},
      </if>
      <if test="udt != null">
        #{udt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dongle.car.dao.model.CarOrderExample" resultType="java.lang.Long">
    select count(*) from car_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update car_order
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=CHAR},
      </if>
      <if test="row.uId != null">
        u_id = #{row.uId,jdbcType=CHAR},
      </if>
      <if test="row.shopId != null">
        shop_id = #{row.shopId,jdbcType=CHAR},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.payStatus != null">
        pay_status = #{row.payStatus,jdbcType=INTEGER},
      </if>
      <if test="row.phone != null">
        phone = #{row.phone,jdbcType=CHAR},
      </if>
      <if test="row.evalId != null">
        eval_id = #{row.evalId,jdbcType=INTEGER},
      </if>
      <if test="row.evalLevel != null">
        eval_level = #{row.evalLevel,jdbcType=VARCHAR},
      </if>
      <if test="row.odt != null">
        odt = #{row.odt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.cdt != null">
        cdt = #{row.cdt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.udt != null">
        udt = #{row.udt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update car_order
    set id = #{row.id,jdbcType=CHAR},
      u_id = #{row.uId,jdbcType=CHAR},
      shop_id = #{row.shopId,jdbcType=CHAR},
      `status` = #{row.status,jdbcType=INTEGER},
      pay_status = #{row.payStatus,jdbcType=INTEGER},
      phone = #{row.phone,jdbcType=CHAR},
      eval_id = #{row.evalId,jdbcType=INTEGER},
      eval_level = #{row.evalLevel,jdbcType=VARCHAR},
      odt = #{row.odt,jdbcType=TIMESTAMP},
      cdt = #{row.cdt,jdbcType=TIMESTAMP},
      udt = #{row.udt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongle.car.dao.model.CarOrder">
    update car_order
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=CHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="evalId != null">
        eval_id = #{evalId,jdbcType=INTEGER},
      </if>
      <if test="evalLevel != null">
        eval_level = #{evalLevel,jdbcType=VARCHAR},
      </if>
      <if test="odt != null">
        odt = #{odt,jdbcType=TIMESTAMP},
      </if>
      <if test="cdt != null">
        cdt = #{cdt,jdbcType=TIMESTAMP},
      </if>
      <if test="udt != null">
        udt = #{udt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongle.car.dao.model.CarOrder">
    update car_order
    set u_id = #{uId,jdbcType=CHAR},
      shop_id = #{shopId,jdbcType=CHAR},
      `status` = #{status,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      phone = #{phone,jdbcType=CHAR},
      eval_id = #{evalId,jdbcType=INTEGER},
      eval_level = #{evalLevel,jdbcType=VARCHAR},
      odt = #{odt,jdbcType=TIMESTAMP},
      cdt = #{cdt,jdbcType=TIMESTAMP},
      udt = #{udt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>